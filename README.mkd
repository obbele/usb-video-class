This is a proof-of-concept program. It shows how to use libusb and
Haskell to write a simple video driver based on the USB Video Class
specifications (aka UVC).

This example is based on the old version 1.0a of the specs. Devices
implementing the new version 1.1 might worked, but none was test so far.

Status
======

1. UVC Video Control and Video Streaming descriptors are correctly parsed.

2. Video probe and commit controls seem to work. The device answers to
   the requests and accepts the control commit.

3. Video streams can be retrieved and raw data (in YUY2 format) is
   readily accessible. Two modules `Codec.UVC.RGBA` and `BMP` allow
   export to bmp files.

What is not working ?
=====================

Only the probe/commit requests are implemented. Others requests
(including camera pantilt, zoom, …, processing unit brightness,
contrast, hue, saturation, … and vendor specific controls are *NOT*
implemented.

What could be improved ?
========================

Handling multiple video streaming interface. For now, only the first
video streaming interface (and its endpoint) is used.

About the video data stream
===========================

Only uncompressed streams are supported.

Only YUY2 uncompressed data can be decoded.
